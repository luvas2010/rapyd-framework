#summary DataFilter syntax

= Data Filter Syntax =


== sample ==

{{{

  $filter = new datafilter_library();
  $filter->label = 'Article Filter';
  $filter->source('articles');
  $filter->field('input','title','Title')->attributes(array('style' => 'width:170px'));
  $filter->field('radiogroup','public','Public')->options(array("y"=>"Yes", "n"=>"No"));
  $filter->buttons('reset','search');
  $filter->build();


}}}


== properties ==

|| *Property* || *Default Value* || *Options* || *Description* ||
|| label || '' || string || label to display for the filter ||


== methods ==
*$filter->source($source)*

|| *$source* || - || mixed || may be a db-table name, a sql-query, a datafilter object, an associative array matrix ||

*$filter->field($type, $name, $label)*

|| *$type* || - || string || field type (input,select,radiogroup..) ||
|| *$name* || - || string || field name, usually the db table field to append in the where clause ||
|| *$label* || - || string || label to display for the field ||

$filter->field($type, $name, $label)->*attributes($attributes)*

|| *$attributes* || - || assoc. array || array of extra attributes to build for column ||

$filter->field($type, $name, $label)->*options($options)*

|| *$options* || - || array || array of options (for field types like select, radiogroup etc..) ||

*$filter->buttons($button1,[$button2])*

|| *$button*n || - || mixed || name of buttons to build ('reset' and 'search' are the standard buttons available for datafilter) ||

*$filter->build()*

build filter, fill $filter->output 